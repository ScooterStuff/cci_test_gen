[
  {
    "id": "apache_giraph-154-Associations-FirstSentence",
    "old_comment_raw": "Convenient replacement of  #startProfilingCPU(long) with  ProfilingModes#CPU_TRACING for the mode.",
    "new_comment_raw": "Create a YourKit controller and do some or all of  Controller#enableExceptionTelemetry()  Controller#startCPUProfiling(long, String, String)  Controller#startAllocationRecording(boolean, int, boolean, int, boolean, boolean) based on boolean config options passed as method parameters",
    "old_code_raw": "  public static YourKitContext startProfile(GiraphConfiguration conf) {\n    Controller controller = null;\n    try {\n      controller = new Controller();\n      controller.enableStackTelemetry();\n      controller.startCPUProfiling(ProfilingModes.CPU_SAMPLING,\n          Controller.DEFAULT_FILTERS);\n      LOG.debug(\"Started YourKit profiling CPU\");\n      // CHECKSTYLE: stop IllegalCatch\n    } catch (Exception e) {\n      // CHECKSTYLE: resume IllegalCatch\n      LOG.debug(\"Failed to start YourKit CPU profiling\", e);\n    }\n    return new YourKitContext(controller);\n  }\n",
    "new_code_raw": "  public static YourKitContext startProfile(boolean enableStackTelemetry,\n                                            boolean enableCPUProfilling,\n                                            boolean enableAllocationRecording) {\n    Controller controller;\n    try {\n      controller = new Controller();\n      // CHECKSTYLE: stop IllegalCatch\n    } catch (Exception e) {\n      // CHECKSTYLE: resume IllegalCatch\n      LOG.info(\"Failed to set up YourKit controller\", e);\n      return null;\n    }\n\n    try {\n      if (enableStackTelemetry) {\n        controller.enableStackTelemetry();\n        LOG.info(\"Enabled Yourkit stack telemetry\");\n      }\n      // CHECKSTYLE: stop IllegalCatch\n    } catch (Exception e) {\n      // CHECKSTYLE: resume IllegalCatch\n      LOG.info(\"Failed to enable YourKit stack telemetry\", e);\n    }\n\n    try {\n      if (enableCPUProfilling) {\n        controller.startCPUProfiling(ProfilingModes.CPU_SAMPLING,\n          Controller.DEFAULT_FILTERS, Controller.DEFAULT_WALLTIME_SPEC);\n        LOG.info(\"Started YourKit CPU profiling\");\n      }\n      // CHECKSTYLE: stop IllegalCatch\n    } catch (Exception e) {\n      // CHECKSTYLE: resume IllegalCatch\n      LOG.info(\"Failed to start YourKit CPU profiling\", e);\n    }\n\n    try {\n      if (enableAllocationRecording) {\n        controller.startAllocationRecording(true, ALLOCATION_RECORDING_INTERVAL,\n            false, -1, true, false);\n        LOG.info(\"Started YourKit allocation recording\");\n      }\n      // CHECKSTYLE: stop IllegalCatch\n    } catch (Exception e) {\n      // CHECKSTYLE: resume IllegalCatch\n      LOG.info(\"Failed to start YourKit allocation recording\", e);\n    }\n\n    return new YourKitContext(controller);\n  }\n\n"
  }
]
